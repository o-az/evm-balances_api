/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MultiCoinBalanceLookup,
  MultiCoinBalanceLookupInterface,
} from "../../../contracts/MultiCoinBalanceLookup.sol/MultiCoinBalanceLookup";

const _abi = [
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getBalance",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "contractAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "decimals",
            type: "uint256",
          },
        ],
        internalType: "struct MultiCoinBalanceLookup.Balance",
        name: "balance",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "getBalances",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "contractAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "decimals",
            type: "uint256",
          },
        ],
        internalType: "struct MultiCoinBalanceLookup.Balance[]",
        name: "balances",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506108a6806100206000396000f3fe60806040526004361061002d5760003560e01c80636a385ae9146100e3578063d4fac45d146101195761008d565b3661008d5760405162461bcd60e51b815260206004820152602560248201527f4d756c7469436f696e42616c616e63654c6f6f6b7570206973206e6f742070616044820152647961626c6560d81b60648201526084015b60405180910390fd5b60405162461bcd60e51b815260206004820152602560248201527f4d756c7469436f696e42616c616e63654c6f6f6b7570206973206e6f742070616044820152647961626c6560d81b6064820152608401610084565b3480156100ef57600080fd5b506101036100fe366004610570565b610146565b60405161011091906106b4565b60405180910390f35b34801561012557600080fd5b50610139610134366004610716565b610277565b6040516101109190610749565b60608167ffffffffffffffff81111561016157610161610763565b6040519080825280602002602001820160405280156101cd57816020015b6101ba6040518060a0016040528060006001600160a01b03168152602001600081526020016060815260200160608152602001600081525090565b81526020019060019003908161017f5790505b50905060005b8281101561026f5761020b8484838181106101f0576101f0610779565b9050602002016020810190610205919061078f565b3b151590565b6102145761025d565b61023f8585858481811061022a5761022a610779565b9050602002016020810190610134919061078f565b82828151811061025157610251610779565b60200260200101819052505b80610267816107aa565b9150506101d3565b509392505050565b6102b26040518060a0016040528060006001600160a01b03168152602001600081526020016060815260200160608152602001600081525090565b6001600160a01b038216156104c0576040805160a0810182526001600160a01b0384811680835292516370a0823160e01b81529086166004820152909160208301916370a082319060240160206040518083038186803b15801561031557600080fd5b505afa158015610329573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034d91906107d3565b8152602001836001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b15801561038b57600080fd5b505afa15801561039f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103c791908101906107ec565b8152602001836001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801561040557600080fd5b505afa158015610419573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261044191908101906107ec565b8152602001836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561047f57600080fd5b505afa158015610493573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b791906107d3565b9052905061054e565b6040518060a00160405280836001600160a01b03168152602001846001600160a01b03163181526020016040518060400160405280600581526020017f457468657200000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600381526020016208aa8960eb1b8152508152602001601281525090505b92915050565b80356001600160a01b038116811461056b57600080fd5b919050565b60008060006040848603121561058557600080fd5b61058e84610554565b9250602084013567ffffffffffffffff808211156105ab57600080fd5b818601915086601f8301126105bf57600080fd5b8135818111156105ce57600080fd5b8760208260051b85010111156105e357600080fd5b6020830194508093505050509250925092565b60005b838110156106115781810151838201526020016105f9565b83811115610620576000848401525b50505050565b6000815180845261063e8160208601602086016105f6565b601f01601f19169290920160200192915050565b6001600160a01b038151168252602081015160208301526000604082015160a0604085015261068460a0850182610626565b90506060830151848203606086015261069d8282610626565b915050608083015160808501528091505092915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561070957603f198886030184526106f7858351610652565b945092850192908501906001016106db565b5092979650505050505050565b6000806040838503121561072957600080fd5b61073283610554565b915061074060208401610554565b90509250929050565b60208152600061075c6020830184610652565b9392505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000602082840312156107a157600080fd5b61075c82610554565b60006000198214156107cc57634e487b7160e01b600052601160045260246000fd5b5060010190565b6000602082840312156107e557600080fd5b5051919050565b6000602082840312156107fe57600080fd5b815167ffffffffffffffff8082111561081657600080fd5b818401915084601f83011261082a57600080fd5b81518181111561083c5761083c610763565b604051601f8201601f19908116603f0116810190838211818310171561086457610864610763565b8160405282815287602084870101111561087d57600080fd5b61088e8360208301602088016105f6565b97965050505050505056fea164736f6c6343000809000a";

type MultiCoinBalanceLookupConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultiCoinBalanceLookupConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultiCoinBalanceLookup__factory extends ContractFactory {
  constructor(...args: MultiCoinBalanceLookupConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MultiCoinBalanceLookup> {
    return super.deploy(overrides || {}) as Promise<MultiCoinBalanceLookup>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MultiCoinBalanceLookup {
    return super.attach(address) as MultiCoinBalanceLookup;
  }
  override connect(signer: Signer): MultiCoinBalanceLookup__factory {
    return super.connect(signer) as MultiCoinBalanceLookup__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultiCoinBalanceLookupInterface {
    return new utils.Interface(_abi) as MultiCoinBalanceLookupInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultiCoinBalanceLookup {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MultiCoinBalanceLookup;
  }
}
