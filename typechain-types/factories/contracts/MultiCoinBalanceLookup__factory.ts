/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MultiCoinBalanceLookup,
  MultiCoinBalanceLookupInterface,
} from "../../contracts/MultiCoinBalanceLookup";

const _abi = [
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "getBalances",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
        ],
        internalType: "struct MultiCoinBalanceLookup.Balance[]",
        name: "balances",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040526040518060400160405280600681526020017f6e616d6528290000000000000000000000000000000000000000000000000000815250600090805190602001906200005192919062000150565b506040518060400160405280600881526020017f73796d626f6c2829000000000000000000000000000000000000000000000000815250600190805190602001906200009f92919062000150565b506040518060400160405280600a81526020017f646563696d616c7328290000000000000000000000000000000000000000000081525060029080519060200190620000ed92919062000150565b506040518060400160405280601281526020017f62616c616e63654f662861646472657373290000000000000000000000000000815250600390805190602001906200013b92919062000150565b503480156200014957600080fd5b5062000265565b8280546200015e9062000200565b90600052602060002090601f016020900481019282620001825760008555620001ce565b82601f106200019d57805160ff1916838001178555620001ce565b82800160010185558215620001ce579182015b82811115620001cd578251825591602001919060010190620001b0565b5b509050620001dd9190620001e1565b5090565b5b80821115620001fc576000816000905550600101620001e2565b5090565b600060028204905060018216806200021957607f821691505b6020821081141562000230576200022f62000236565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b61129780620002756000396000f3fe6080604052600436106100225760003560e01c80636a385ae91461009d57610062565b36610062576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161005990610f55565b60405180910390fd5b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161009490610f55565b60405180910390fd5b3480156100a957600080fd5b506100c460048036038101906100bf9190610afa565b6100da565b6040516100d19190610f33565b60405180910390f35b60608282905067ffffffffffffffff81111561011f577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561015857816020015b6101456109b5565b81526020019060019003908161013d5790505b50905060005b83839050811015610696576101bf8484838181106101a5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020160208101906101ba9190610ad1565b61069e565b6101c857610683565b600073ffffffffffffffffffffffffffffffffffffffff16848483818110610219577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060200201602081019061022e9190610ad1565b73ffffffffffffffffffffffffffffffffffffffff16146104d1576102a085858584818110610286577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060200201602081019061029b9190610ad1565b6106b1565b8282815181106102d9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151600001818152505061033f848483818110610325577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060200201602081019061033a9190610ad1565b6107e1565b828281518110610378577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151602001819052506103dd8484838181106103c3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020160208101906103d89190610ad1565b61082d565b828281518110610416577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516040018190525061047b848483818110610461577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020160208101906104769190610ad1565b610879565b8282815181106104b4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516060019060ff16908160ff1681525050610682565b8473ffffffffffffffffffffffffffffffffffffffff1631828281518110610522577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015160000181815250506040518060400160405280600581526020017f45746865720000000000000000000000000000000000000000000000000000008152508282815181106105a1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151602001819052506040518060400160405280600381526020017f455448000000000000000000000000000000000000000000000000000000000081525082828151811061061f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151604001819052506012828281518110610669577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516060019060ff16908160ff16815250505b5b808061068e90611135565b91505061015e565b509392505050565b600080823b905060008111915050919050565b6000806003846040516024016106c79190610f18565b604051602081830303815290604052906040516106e49190610eea565b60405180910390207bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000808473ffffffffffffffffffffffffffffffffffffffff16836040516107639190610ed3565b600060405180830381855afa9150503d806000811461079e576040519150601f19603f3d011682016040523d82523d6000602084013e6107a3565b606091505b50915091508180156107b6575060208151145b6107c15760006107d6565b808060200190518101906107d59190610b93565b5b935050505092915050565b60606000806107f16000856108b7565b915091508161080f5760405180602001604052806000815250610824565b808060200190518101906108239190610b52565b5b92505050919050565b606060008061083d6001856108b7565b915091508161085b5760405180602001604052806000815250610870565b8080602001905181019061086f9190610b52565b5b92505050919050565b60008060006108896002856108b7565b91509150816108995760006108ae565b808060200190518101906108ad9190610bbc565b5b92505050919050565b60006060600084846040516024016108cf9190610f18565b604051602081830303815290604052906040516108ec9190610f01565b60405180910390207bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090508373ffffffffffffffffffffffffffffffffffffffff16816040516109689190610ed3565b600060405180830381855afa9150503d80600081146109a3576040519150601f19603f3d011682016040523d82523d6000602084013e6109a8565b606091505b5092509250509250929050565b6040518060800160405280600081526020016060815260200160608152602001600060ff1681525090565b60006109f36109ee84610fa6565b610f75565b905082815260208101848484011115610a0b57600080fd5b610a168482856110d0565b509392505050565b600081359050610a2d8161121c565b92915050565b60008083601f840112610a4557600080fd5b8235905067ffffffffffffffff811115610a5e57600080fd5b602083019150836020820283011115610a7657600080fd5b9250929050565b600082601f830112610a8e57600080fd5b8151610a9e8482602086016109e0565b91505092915050565b600081519050610ab681611233565b92915050565b600081519050610acb8161124a565b92915050565b600060208284031215610ae357600080fd5b6000610af184828501610a1e565b91505092915050565b600080600060408486031215610b0f57600080fd5b6000610b1d86828701610a1e565b935050602084013567ffffffffffffffff811115610b3a57600080fd5b610b4686828701610a33565b92509250509250925092565b600060208284031215610b6457600080fd5b600082015167ffffffffffffffff811115610b7e57600080fd5b610b8a84828501610a7d565b91505092915050565b600060208284031215610ba557600080fd5b6000610bb384828501610aa7565b91505092915050565b600060208284031215610bce57600080fd5b6000610bdc84828501610abc565b91505092915050565b6000610bf18383610e4b565b905092915050565b610c0281611087565b82525050565b6000610c1382611010565b610c1d818561103e565b935083602082028501610c2f85610fd6565b8060005b85811015610c6b5784840389528151610c4c8582610be5565b9450610c5783611031565b925060208a01995050600181019050610c33565b50829750879550505050505092915050565b6000610c888261101b565b610c92818561104f565b9350610ca28185602086016110d0565b80840191505092915050565b6000610cb982611026565b610cc3818561105a565b9350610cd38185602086016110d0565b610cdc8161120b565b840191505092915050565b60008154610cf481611103565b610cfe818661107c565b94506001821660008114610d195760018114610d2a57610d5d565b60ff19831686528186019350610d5d565b610d3385610ffb565b60005b83811015610d5557815481890152600182019150602081019050610d36565b838801955050505b50505092915050565b60008154610d7381611103565b610d7d818661107c565b94506001821660008114610d985760018114610da957610ddc565b60ff19831686528186019350610ddc565b610db285610fe6565b60005b83811015610dd457815481890152600182019150602081019050610db5565b838801955050505b50505092915050565b6000610df260258361106b565b91507f4d756c7469436f696e42616c616e63654c6f6f6b7570206973206e6f7420706160008301527f7961626c650000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000608083016000830151610e636000860182610eb5565b5060208301518482036020860152610e7b8282610cae565b91505060408301518482036040860152610e958282610cae565b9150506060830151610eaa6060860182610ec4565b508091505092915050565b610ebe816110b9565b82525050565b610ecd816110c3565b82525050565b6000610edf8284610c7d565b915081905092915050565b6000610ef68284610d66565b915081905092915050565b6000610f0d8284610ce7565b915081905092915050565b6000602082019050610f2d6000830184610bf9565b92915050565b60006020820190508181036000830152610f4d8184610c08565b905092915050565b60006020820190508181036000830152610f6e81610de5565b9050919050565b6000604051905081810181811067ffffffffffffffff82111715610f9c57610f9b6111dc565b5b8060405250919050565b600067ffffffffffffffff821115610fc157610fc06111dc565b5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061109282611099565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b838110156110ee5780820151818401526020810190506110d3565b838111156110fd576000848401525b50505050565b6000600282049050600182168061111b57607f821691505b6020821081141561112f5761112e6111ad565b5b50919050565b6000611140826110b9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156111735761117261117e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b61122581611087565b811461123057600080fd5b50565b61123c816110b9565b811461124757600080fd5b50565b611253816110c3565b811461125e57600080fd5b5056fea26469706673582212208806e2db11fba89ae64d10dac189ffbc5890b2c7522bf2cf95c0ca28ce1f37bb64736f6c63430008000033";

type MultiCoinBalanceLookupConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultiCoinBalanceLookupConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultiCoinBalanceLookup__factory extends ContractFactory {
  constructor(...args: MultiCoinBalanceLookupConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MultiCoinBalanceLookup> {
    return super.deploy(overrides || {}) as Promise<MultiCoinBalanceLookup>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MultiCoinBalanceLookup {
    return super.attach(address) as MultiCoinBalanceLookup;
  }
  override connect(signer: Signer): MultiCoinBalanceLookup__factory {
    return super.connect(signer) as MultiCoinBalanceLookup__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultiCoinBalanceLookupInterface {
    return new utils.Interface(_abi) as MultiCoinBalanceLookupInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultiCoinBalanceLookup {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MultiCoinBalanceLookup;
  }
}
